version: '3.8'

services:
  # DeepSight Imaging AI Application
  deepsight-app:
    build: .
    container_name: deepsight-imaging-ai
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://deepsight:password@postgres:5432/deepsight_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - deepsight-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: deepsight-postgres
    environment:
      - POSTGRES_DB=deepsight_db
      - POSTGRES_USER=deepsight
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - deepsight-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: deepsight-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - deepsight-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: deepsight-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - deepsight-app
    restart: unless-stopped
    networks:
      - deepsight-network

volumes:
  postgres_data:
  redis_data:

networks:
  deepsight-network:
    driver: bridge
